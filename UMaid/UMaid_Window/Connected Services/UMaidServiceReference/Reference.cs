//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UMaid_Window.UMaidServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoCoordinate", Namespace="http://schemas.datacontract.org/2004/07/System.Device.Location")]
    [System.SerializableAttribute()]
    public partial class GeoCoordinate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AltitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CourseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HorizontalAccuracyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VerticalAccuracyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Altitude {
            get {
                return this.AltitudeField;
            }
            set {
                if ((this.AltitudeField.Equals(value) != true)) {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Course {
            get {
                return this.CourseField;
            }
            set {
                if ((this.CourseField.Equals(value) != true)) {
                    this.CourseField = value;
                    this.RaisePropertyChanged("Course");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HorizontalAccuracy {
            get {
                return this.HorizontalAccuracyField;
            }
            set {
                if ((this.HorizontalAccuracyField.Equals(value) != true)) {
                    this.HorizontalAccuracyField = value;
                    this.RaisePropertyChanged("HorizontalAccuracy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double VerticalAccuracy {
            get {
                return this.VerticalAccuracyField;
            }
            set {
                if ((this.VerticalAccuracyField.Equals(value) != true)) {
                    this.VerticalAccuracyField = value;
                    this.RaisePropertyChanged("VerticalAccuracy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UMaidServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserType", ReplyAction="http://tempuri.org/IService1/GetUserTypeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_UserType GetUserType(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserType", ReplyAction="http://tempuri.org/IService1/GetUserTypeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_UserType> GetUserTypeAsync(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_User GetUser(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_User> GetUserAsync(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserByUserID", ReplyAction="http://tempuri.org/IService1/GetUserByUserIDResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_User GetUserByUserID(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserByUserID", ReplyAction="http://tempuri.org/IService1/GetUserByUserIDResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_User> GetUserByUserIDAsync(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertUser", ReplyAction="http://tempuri.org/IService1/InsertUserResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_User InsertUser(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertUser", ReplyAction="http://tempuri.org/IService1/InsertUserResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_User> InsertUserAsync(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Bool UpdateUser(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Bool> UpdateUserAsync(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Bool DeleteUser(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Bool> DeleteUserAsync(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProfile", ReplyAction="http://tempuri.org/IService1/GetProfileResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Profile GetProfile(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProfile", ReplyAction="http://tempuri.org/IService1/GetProfileResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Profile> GetProfileAsync(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertProfile", ReplyAction="http://tempuri.org/IService1/InsertProfileResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Profile InsertProfile(Model.Dto_Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertProfile", ReplyAction="http://tempuri.org/IService1/InsertProfileResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Profile> InsertProfileAsync(Model.Dto_Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProfile", ReplyAction="http://tempuri.org/IService1/UpdateProfileResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Bool UpdateProfile(Model.Dto_Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProfile", ReplyAction="http://tempuri.org/IService1/UpdateProfileResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Bool> UpdateProfileAsync(Model.Dto_Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProfile", ReplyAction="http://tempuri.org/IService1/DeleteProfileResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Bool DeleteProfile(Model.Dto_Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProfile", ReplyAction="http://tempuri.org/IService1/DeleteProfileResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Bool> DeleteProfileAsync(Model.Dto_Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllProfiles", ReplyAction="http://tempuri.org/IService1/GetAllProfilesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Profile[] GetAllProfiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllProfiles", ReplyAction="http://tempuri.org/IService1/GetAllProfilesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Profile[]> GetAllProfilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPicture", ReplyAction="http://tempuri.org/IService1/GetPictureResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Picture GetPicture(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPicture", ReplyAction="http://tempuri.org/IService1/GetPictureResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Picture> GetPictureAsync(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertPicture", ReplyAction="http://tempuri.org/IService1/InsertPictureResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Picture InsertPicture(Model.Dto_Picture pictureGiven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertPicture", ReplyAction="http://tempuri.org/IService1/InsertPictureResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Picture> InsertPictureAsync(Model.Dto_Picture pictureGiven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePicture", ReplyAction="http://tempuri.org/IService1/UpdatePictureResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Bool UpdatePicture(Model.Dto_Picture pictureGiven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePicture", ReplyAction="http://tempuri.org/IService1/UpdatePictureResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Bool> UpdatePictureAsync(Model.Dto_Picture pictureGiven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePicture", ReplyAction="http://tempuri.org/IService1/DeletePictureResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Bool DeletePicture(Model.Dto_Picture pictureGiven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePicture", ReplyAction="http://tempuri.org/IService1/DeletePictureResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Bool> DeletePictureAsync(Model.Dto_Picture pictureGiven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllPictures", ReplyAction="http://tempuri.org/IService1/GetAllPicturesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Picture[] GetAllPictures();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllPictures", ReplyAction="http://tempuri.org/IService1/GetAllPicturesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Picture[]> GetAllPicturesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPropertiesByUser", ReplyAction="http://tempuri.org/IService1/GetPropertiesByUserResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Property[] GetPropertiesByUser(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPropertiesByUser", ReplyAction="http://tempuri.org/IService1/GetPropertiesByUserResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Property[]> GetPropertiesByUserAsync(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListings", ReplyAction="http://tempuri.org/IService1/GetListingsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Listing[] GetListings(UMaid_Window.UMaidServiceReference.GeoCoordinate location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListings", ReplyAction="http://tempuri.org/IService1/GetListingsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Listing[]> GetListingsAsync(UMaid_Window.UMaidServiceReference.GeoCoordinate location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCustomerTransactions", ReplyAction="http://tempuri.org/IService1/GetCustomerTransactionsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Transaction[] GetCustomerTransactions(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCustomerTransactions", ReplyAction="http://tempuri.org/IService1/GetCustomerTransactionsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Transaction[]> GetCustomerTransactionsAsync(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMaidTransactions", ReplyAction="http://tempuri.org/IService1/GetMaidTransactionsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Transaction[] GetMaidTransactions(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMaidTransactions", ReplyAction="http://tempuri.org/IService1/GetMaidTransactionsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Transaction[]> GetMaidTransactionsAsync(Model.Dto_User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertProperty", ReplyAction="http://tempuri.org/IService1/InsertPropertyResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Bool InsertProperty(Model.Dto_Property p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertProperty", ReplyAction="http://tempuri.org/IService1/InsertPropertyResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Bool> InsertPropertyAsync(Model.Dto_Property p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProperty", ReplyAction="http://tempuri.org/IService1/UpdatePropertyResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Bool UpdateProperty(Model.Dto_Property p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProperty", ReplyAction="http://tempuri.org/IService1/UpdatePropertyResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Bool> UpdatePropertyAsync(Model.Dto_Property p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProperty", ReplyAction="http://tempuri.org/IService1/DeletePropertyResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Bool DeleteProperty(Model.Dto_Property p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProperty", ReplyAction="http://tempuri.org/IService1/DeletePropertyResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Bool> DeletePropertyAsync(Model.Dto_Property p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBid", ReplyAction="http://tempuri.org/IService1/GetBidResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Bid GetBid(Model.Dto_Bid bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBid", ReplyAction="http://tempuri.org/IService1/GetBidResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Bid> GetBidAsync(Model.Dto_Bid bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBids", ReplyAction="http://tempuri.org/IService1/GetBidsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Bid[] GetBids();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBids", ReplyAction="http://tempuri.org/IService1/GetBidsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Bid[]> GetBidsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertBid", ReplyAction="http://tempuri.org/IService1/InsertBidResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Bid InsertBid(Model.Dto_Bid bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertBid", ReplyAction="http://tempuri.org/IService1/InsertBidResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Bid> InsertBidAsync(Model.Dto_Bid bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateBid", ReplyAction="http://tempuri.org/IService1/UpdateBidResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Bool UpdateBid(Model.Dto_Bid bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateBid", ReplyAction="http://tempuri.org/IService1/UpdateBidResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Bool> UpdateBidAsync(Model.Dto_Bid bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBid", ReplyAction="http://tempuri.org/IService1/DeleteBidResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        Model.Dto_Bool DeleteBid(Model.Dto_Bid bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBid", ReplyAction="http://tempuri.org/IService1/DeleteBidResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<Model.Dto_Bool> DeleteBidAsync(Model.Dto_Bid bid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : UMaid_Window.UMaidServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<UMaid_Window.UMaidServiceReference.IService1>, UMaid_Window.UMaidServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Model.Dto_UserType GetUserType(Model.Dto_User user) {
            return base.Channel.GetUserType(user);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_UserType> GetUserTypeAsync(Model.Dto_User user) {
            return base.Channel.GetUserTypeAsync(user);
        }
        
        public Model.Dto_User GetUser(Model.Dto_User user) {
            return base.Channel.GetUser(user);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_User> GetUserAsync(Model.Dto_User user) {
            return base.Channel.GetUserAsync(user);
        }
        
        public Model.Dto_User GetUserByUserID(Model.Dto_User user) {
            return base.Channel.GetUserByUserID(user);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_User> GetUserByUserIDAsync(Model.Dto_User user) {
            return base.Channel.GetUserByUserIDAsync(user);
        }
        
        public Model.Dto_User InsertUser(Model.Dto_User user) {
            return base.Channel.InsertUser(user);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_User> InsertUserAsync(Model.Dto_User user) {
            return base.Channel.InsertUserAsync(user);
        }
        
        public Model.Dto_Bool UpdateUser(Model.Dto_User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Bool> UpdateUserAsync(Model.Dto_User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public Model.Dto_Bool DeleteUser(Model.Dto_User user) {
            return base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Bool> DeleteUserAsync(Model.Dto_User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public Model.Dto_User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<Model.Dto_User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public Model.Dto_Profile GetProfile(Model.Dto_User user) {
            return base.Channel.GetProfile(user);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Profile> GetProfileAsync(Model.Dto_User user) {
            return base.Channel.GetProfileAsync(user);
        }
        
        public Model.Dto_Profile InsertProfile(Model.Dto_Profile profile) {
            return base.Channel.InsertProfile(profile);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Profile> InsertProfileAsync(Model.Dto_Profile profile) {
            return base.Channel.InsertProfileAsync(profile);
        }
        
        public Model.Dto_Bool UpdateProfile(Model.Dto_Profile profile) {
            return base.Channel.UpdateProfile(profile);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Bool> UpdateProfileAsync(Model.Dto_Profile profile) {
            return base.Channel.UpdateProfileAsync(profile);
        }
        
        public Model.Dto_Bool DeleteProfile(Model.Dto_Profile profile) {
            return base.Channel.DeleteProfile(profile);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Bool> DeleteProfileAsync(Model.Dto_Profile profile) {
            return base.Channel.DeleteProfileAsync(profile);
        }
        
        public Model.Dto_Profile[] GetAllProfiles() {
            return base.Channel.GetAllProfiles();
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Profile[]> GetAllProfilesAsync() {
            return base.Channel.GetAllProfilesAsync();
        }
        
        public Model.Dto_Picture GetPicture(Model.Dto_User user) {
            return base.Channel.GetPicture(user);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Picture> GetPictureAsync(Model.Dto_User user) {
            return base.Channel.GetPictureAsync(user);
        }
        
        public Model.Dto_Picture InsertPicture(Model.Dto_Picture pictureGiven) {
            return base.Channel.InsertPicture(pictureGiven);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Picture> InsertPictureAsync(Model.Dto_Picture pictureGiven) {
            return base.Channel.InsertPictureAsync(pictureGiven);
        }
        
        public Model.Dto_Bool UpdatePicture(Model.Dto_Picture pictureGiven) {
            return base.Channel.UpdatePicture(pictureGiven);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Bool> UpdatePictureAsync(Model.Dto_Picture pictureGiven) {
            return base.Channel.UpdatePictureAsync(pictureGiven);
        }
        
        public Model.Dto_Bool DeletePicture(Model.Dto_Picture pictureGiven) {
            return base.Channel.DeletePicture(pictureGiven);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Bool> DeletePictureAsync(Model.Dto_Picture pictureGiven) {
            return base.Channel.DeletePictureAsync(pictureGiven);
        }
        
        public Model.Dto_Picture[] GetAllPictures() {
            return base.Channel.GetAllPictures();
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Picture[]> GetAllPicturesAsync() {
            return base.Channel.GetAllPicturesAsync();
        }
        
        public Model.Dto_Property[] GetPropertiesByUser(Model.Dto_User user) {
            return base.Channel.GetPropertiesByUser(user);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Property[]> GetPropertiesByUserAsync(Model.Dto_User user) {
            return base.Channel.GetPropertiesByUserAsync(user);
        }
        
        public Model.Dto_Listing[] GetListings(UMaid_Window.UMaidServiceReference.GeoCoordinate location) {
            return base.Channel.GetListings(location);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Listing[]> GetListingsAsync(UMaid_Window.UMaidServiceReference.GeoCoordinate location) {
            return base.Channel.GetListingsAsync(location);
        }
        
        public Model.Dto_Transaction[] GetCustomerTransactions(Model.Dto_User user) {
            return base.Channel.GetCustomerTransactions(user);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Transaction[]> GetCustomerTransactionsAsync(Model.Dto_User user) {
            return base.Channel.GetCustomerTransactionsAsync(user);
        }
        
        public Model.Dto_Transaction[] GetMaidTransactions(Model.Dto_User user) {
            return base.Channel.GetMaidTransactions(user);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Transaction[]> GetMaidTransactionsAsync(Model.Dto_User user) {
            return base.Channel.GetMaidTransactionsAsync(user);
        }
        
        public Model.Dto_Bool InsertProperty(Model.Dto_Property p) {
            return base.Channel.InsertProperty(p);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Bool> InsertPropertyAsync(Model.Dto_Property p) {
            return base.Channel.InsertPropertyAsync(p);
        }
        
        public Model.Dto_Bool UpdateProperty(Model.Dto_Property p) {
            return base.Channel.UpdateProperty(p);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Bool> UpdatePropertyAsync(Model.Dto_Property p) {
            return base.Channel.UpdatePropertyAsync(p);
        }
        
        public Model.Dto_Bool DeleteProperty(Model.Dto_Property p) {
            return base.Channel.DeleteProperty(p);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Bool> DeletePropertyAsync(Model.Dto_Property p) {
            return base.Channel.DeletePropertyAsync(p);
        }
        
        public Model.Dto_Bid GetBid(Model.Dto_Bid bid) {
            return base.Channel.GetBid(bid);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Bid> GetBidAsync(Model.Dto_Bid bid) {
            return base.Channel.GetBidAsync(bid);
        }
        
        public Model.Dto_Bid[] GetBids() {
            return base.Channel.GetBids();
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Bid[]> GetBidsAsync() {
            return base.Channel.GetBidsAsync();
        }
        
        public Model.Dto_Bid InsertBid(Model.Dto_Bid bid) {
            return base.Channel.InsertBid(bid);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Bid> InsertBidAsync(Model.Dto_Bid bid) {
            return base.Channel.InsertBidAsync(bid);
        }
        
        public Model.Dto_Bool UpdateBid(Model.Dto_Bid bid) {
            return base.Channel.UpdateBid(bid);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Bool> UpdateBidAsync(Model.Dto_Bid bid) {
            return base.Channel.UpdateBidAsync(bid);
        }
        
        public Model.Dto_Bool DeleteBid(Model.Dto_Bid bid) {
            return base.Channel.DeleteBid(bid);
        }
        
        public System.Threading.Tasks.Task<Model.Dto_Bool> DeleteBidAsync(Model.Dto_Bid bid) {
            return base.Channel.DeleteBidAsync(bid);
        }
    }
}
